{
  "1": "What is Node.js and how does it differ from browser-based JavaScript?",
  "2": "What is the role of the V8 engine in Node.js?",
  "3": "How do you install Node.js on Windows, macOS, or Linux?",
  "4": "What is npm and how is it used in Node.js projects?",
  "5": "What is a package.json file and why is it important?",
  "6": "How do you create a simple HTTP server using Node.js?",
  "7": "What is the difference between synchronous and asynchronous code in Node.js?",
  "8": "How does the event loop work in Node.js?",
  "9": "What are callbacks and how do they help with async operations?",
  "10": "What are Promises and how are they used in Node.js?",
  "11": "What is async/await and how does it improve asynchronous code readability?",
  "12": "How do you use the built-in 'fs' module to read and write files?",
  "13": "What is the difference between require() and import?",
  "14": "What are CommonJS and ES Modules in Node.js?",
  "15": "How do you handle errors in asynchronous functions?",
  "16": "What is middleware in Express.js?",
  "17": "How do you install and use Express.js in a Node.js project?",
  "18": "What is routing in Express.js?",
  "19": "How do you handle POST requests and parse request bodies?",
  "20": "How do you serve static files in an Express application?",
  "21": "How do you structure a basic REST API in Node.js?",
  "22": "What are environment variables and how do you use dotenv?",
  "23": "How do you connect Node.js with a MongoDB database?",
  "24": "What is Mongoose and why is it used with MongoDB?",
  "25": "How do you define schemas and models in Mongoose?",
  "26": "What is the difference between find() and findOne() in Mongoose?",
  "27": "How do you handle validation in Mongoose models?",
  "28": "What are HTTP status codes and how should they be used in APIs?",
  "29": "What is Postman and how do you use it to test Node.js APIs?",
  "30": "How do you implement CRUD operations in a Node.js REST API?",
  "31": "What is CORS and how do you enable it in Express?",
  "32": "What is the purpose of the nodemon package?",
  "33": "How do you use Express Router to organize routes?",
  "34": "What are query parameters and route parameters?",
  "35": "How do you handle 404 errors in Express?",
  "36": "What are middlewares for authentication and authorization?",
  "37": "What is JWT and how is it used for authentication?",
  "38": "How do you hash passwords using bcrypt in Node.js?",
  "39": "How do you secure an Express API?",
  "40": "What is helmet and how does it improve API security?",
  "41": "How do you log requests and errors in a Node.js app?",
  "42": "What is rate limiting and why is it important for APIs?",
  "43": "How do you use MongoDB Atlas with Node.js?",
  "44": "How do you deploy a Node.js app to Render, Heroku, or Vercel?",
  "45": "How do you set up a Node.js app for production?",
  "46": "What is process.env and how is it used?",
  "47": "How can you create custom middleware in Express?",
  "48": "What are streams in Node.js?",
  "49": "What is the difference between pipe and async iteration?",
  "50": "What is the difference between spawn and exec in child_process?",
  "51": "What is an event emitter in Node.js?",
  "52": "What is the Buffer class and how is it used?",
  "53": "How do you schedule tasks in Node.js?",
  "54": "What are WebSockets and how do you use them in Node.js?",
  "55": "What is socket.io and how do you use it for real-time apps?",
  "56": "What is clustering in Node.js?",
  "57": "What are worker threads and when should you use them?",
  "58": "What is a memory leak and how do you detect it in Node.js?",
  "59": "How do you debug a Node.js app?",
  "60": "What are the advantages of using TypeScript with Node.js?",
  "61": "How do you set up a Node.js project with TypeScript?",
  "62": "What are type definitions and how do you use @types packages?",
  "63": "How do you write unit tests for Node.js applications?",
  "64": "What is Jest and how do you use it to test Node.js code?",
  "65": "How do you mock functions or modules in tests?",
  "66": "What is test-driven development (TDD) and how does it apply to Node.js?",
  "67": "How do you use supertest to test Express routes?",
  "68": "What is EJS and how do you use it to render views in Express?",
  "69": "What is the difference between EJS, Handlebars, and Pug?",
  "70": "What is the role of a view engine in Express?",
  "71": "How do you pass data from a route to a template?",
  "72": "What is CSRF and how can you protect against it?",
  "73": "What is session management and how do you implement it?",
  "74": "What are cookies and how do you use them in Node.js?",
  "75": "How do you use express-session to manage sessions?",
  "76": "What is Passport.js and how do you integrate it?",
  "77": "How do you implement OAuth with Google or GitHub in Node.js?",
  "78": "What is role-based access control (RBAC) and how is it done?",
  "79": "What are the differences between PUT, PATCH, and POST methods?",
  "80": "How do you handle file uploads using multer?",
  "81": "How do you compress responses with gzip in Node.js?",
  "82": "What are some common performance issues in Node.js?",
  "83": "How do you profile CPU and memory in a Node.js app?",
  "84": "How do you cache responses in Node.js?",
  "85": "What is Redis and how do you use it in Node.js?",
  "86": "What is an ORM and how is it different from an ODM?",
  "87": "What is Sequelize and how do you use it with PostgreSQL?",
  "88": "How do you perform migrations with Sequelize?",
  "89": "What is Knex.js and how does it compare to Sequelize?",
  "90": "How do you integrate GraphQL with Node.js?",
  "91": "What is Apollo Server and how do you use it?",
  "92": "How do you handle file streaming with video or audio in Node.js?",
  "93": "How do you build a CLI tool with Node.js?",
  "94": "How do you use the commander package to build CLI interfaces?",
  "95": "How do you publish a Node.js package to npm?",
  "96": "What is semantic versioning and why does it matter in Node.js projects?",
  "97": "What is the difference between devDependencies and dependencies?",
  "98": "How do you automate tasks using npm scripts?",
  "99": "How do you monitor a Node.js application in production?",
  "100": "What are the best practices for maintaining a Node.js codebase?"
}
